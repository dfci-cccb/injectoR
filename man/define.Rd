% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/injectoR.R
\name{define}
\alias{define}
\title{Creates a key to factory binding}
\usage{
define(key, factory, scope = default, binder = .binder)
}
\arguments{
\item{key}{injectable bean identifier, this name is matched to a
parameter name during injection}

\item{factory}{responsible for provisioning of the bean, a factory
may accept any number of arguments in which case the framework will
attempt to inject the argument if a binding to the parameter name
exists; if it does not, that argument will not be injected, in
which case it is the factory's responsibility to deal with a
missing argument}

\item{scope}{of the bean, wraps the injected factory call
specifying provisioning strategy, if omitted a new bean instance
will be provisioned each time injection is requested; injectoR also
ships with with the singleton scope which will provide once and
cache the bean for subsequent calls. Interface allows for custom
scoping, the scope parameter must be a function accepting key (name)
and the provider - the wrapped injected factory call - a function
accepting no parameters responsible for actual provisioning}

\item{binder}{for this binding, if omitted the new binding is added
to the root binder}
}
\value{
calls are made for side effect of defining the binding
}
\description{
Creates a key to factory binding
}

